{"ast":null,"code":"const {\n  ADD_CART,\n  DELIVERY_INFO,\n  INCREASE_AMOUNT,\n  DECREASE_AMOUNT,\n  REMOVE_CART,\n  CLEAR_CART,\n  LOGIN_USER,\n  SIGNOUT_USER\n} = require('./actions');\n\nconst initialState = {\n  cart: [],\n  delivery: {},\n  userInfo: {},\n  paymentDetails: {}\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_CART:\n      let filterCart = [...state.cart].filter(item => {\n        return item.name !== action.payload.name;\n      });\n      return { ...state,\n        cart: [...filterCart, action.payload]\n      };\n\n    case REMOVE_CART:\n      let filterId = [...state.cart].filter(item => {\n        return item.id !== action.id;\n      });\n      return {\n        cart: [...filterId],\n        userInfo: state.userInfo,\n        delivery: state.delivery\n      };\n\n    case CLEAR_CART:\n      return {\n        cart: [],\n        userInfo: state.userInfo,\n        delivery: state.delivery\n      };\n\n    case DELIVERY_INFO:\n      return { ...state,\n        delivery: action.payload\n      };\n\n    case INCREASE_AMOUNT:\n      const newCart = [...state.cart].map(item => {\n        return item.id === action.id ? { ...item,\n          quantity: item.quantity + 1\n        } : { ...item\n        };\n      });\n      return {\n        cart: [...newCart],\n        userInfo: state.userInfo,\n        delivery: state.delivery\n      };\n\n    case DECREASE_AMOUNT:\n      const newAgainCart = [...state.cart].map(item => {\n        return item.id === action.id ? { ...item,\n          quantity: item.quantity - 1\n        } : { ...item\n        };\n      });\n      const quantityManage = [...newAgainCart].map(item => {\n        return item.quantity <= 1 ? { ...item,\n          quantity: 1\n        } : { ...item,\n          quantity: item.quantity\n        };\n      });\n      return {\n        cart: [...quantityManage],\n        userInfo: state.userInfo,\n        delivery: state.delivery\n      };\n\n    case LOGIN_USER:\n      return { ...state,\n        userInfo: action.payload,\n        cart: state.cart\n      };\n\n    case SIGNOUT_USER:\n      return { ...state,\n        userInfo: {}\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/computer lab/Desktop/ecomfirebase/red-onionfood/src/redux/reducer.js"],"names":["ADD_CART","DELIVERY_INFO","INCREASE_AMOUNT","DECREASE_AMOUNT","REMOVE_CART","CLEAR_CART","LOGIN_USER","SIGNOUT_USER","require","initialState","cart","delivery","userInfo","paymentDetails","reducer","state","action","type","filterCart","filter","item","name","payload","filterId","id","newCart","map","quantity","newAgainCart","quantityManage"],"mappings":"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","sourcesContent":["const {\r\n\tADD_CART,\r\n\tDELIVERY_INFO,\r\n\tINCREASE_AMOUNT,\r\n\tDECREASE_AMOUNT,\r\n\tREMOVE_CART,\r\n\tCLEAR_CART,\r\n\tLOGIN_USER,\r\n\tSIGNOUT_USER\r\n} = require('./actions');\r\n\r\nconst initialState = {\r\n\tcart           : [],\r\n\tdelivery       : {},\r\n\tuserInfo       : {},\r\n\tpaymentDetails : {}\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase ADD_CART:\r\n\t\t\tlet filterCart = [ ...state.cart ].filter((item) => {\r\n\t\t\t\treturn item.name !== action.payload.name;\r\n\t\t\t});\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcart : [ ...filterCart, action.payload ]\r\n\t\t\t};\r\n\r\n\t\tcase REMOVE_CART:\r\n\t\t\tlet filterId = [ ...state.cart ].filter((item) => {\r\n\t\t\t\treturn item.id !== action.id;\r\n\t\t\t});\r\n\t\t\treturn {\r\n\t\t\t\tcart     : [ ...filterId ],\r\n\t\t\t\tuserInfo : state.userInfo,\r\n\t\t\t\tdelivery : state.delivery\r\n\t\t\t};\r\n\r\n\t\tcase CLEAR_CART:\r\n\t\t\treturn {\r\n\t\t\t\tcart     : [],\r\n\t\t\t\tuserInfo : state.userInfo,\r\n\t\t\t\tdelivery : state.delivery\r\n\t\t\t};\r\n\r\n\t\tcase DELIVERY_INFO:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdelivery : action.payload\r\n\t\t\t};\r\n\r\n\t\tcase INCREASE_AMOUNT:\r\n\t\t\tconst newCart = [ ...state.cart ].map((item) => {\r\n\t\t\t\treturn item.id === action.id ? { ...item, quantity: item.quantity + 1 } : { ...item };\r\n\t\t\t});\r\n\t\t\treturn {\r\n\t\t\t\tcart     : [ ...newCart ],\r\n\t\t\t\tuserInfo : state.userInfo,\r\n\t\t\t\tdelivery : state.delivery\r\n\t\t\t};\r\n\r\n\t\tcase DECREASE_AMOUNT:\r\n\t\t\tconst newAgainCart = [ ...state.cart ].map((item) => {\r\n\t\t\t\treturn item.id === action.id ? { ...item, quantity: item.quantity - 1 } : { ...item };\r\n\t\t\t});\r\n\t\t\tconst quantityManage = [ ...newAgainCart ].map((item) => {\r\n\t\t\t\treturn item.quantity <= 1 ? { ...item, quantity: 1 } : { ...item, quantity: item.quantity };\r\n\t\t\t});\r\n\t\t\treturn {\r\n\t\t\t\tcart     : [ ...quantityManage ],\r\n\t\t\t\tuserInfo : state.userInfo,\r\n\t\t\t\tdelivery : state.delivery\r\n\t\t\t};\r\n\r\n\t\tcase LOGIN_USER:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tuserInfo : action.payload,\r\n\t\t\t\tcart     : state.cart\r\n\t\t\t};\r\n\r\n\t\tcase SIGNOUT_USER:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tuserInfo : {}\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}